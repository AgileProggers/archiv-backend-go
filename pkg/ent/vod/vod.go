// Code generated by entc, DO NOT EDIT.

package vod

const (
	// Label holds the string label denoting the vod type in the database.
	Label = "vod"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldDuration holds the string denoting the duration field in the database.
	FieldDuration = "duration"
	// FieldDate holds the string denoting the date field in the database.
	FieldDate = "date"
	// FieldFilename holds the string denoting the filename field in the database.
	FieldFilename = "filename"
	// FieldResolution holds the string denoting the resolution field in the database.
	FieldResolution = "resolution"
	// FieldFps holds the string denoting the fps field in the database.
	FieldFps = "fps"
	// FieldSize holds the string denoting the size field in the database.
	FieldSize = "size"
	// FieldPublish holds the string denoting the publish field in the database.
	FieldPublish = "publish"
	// EdgeCreator holds the string denoting the creator edge name in mutations.
	EdgeCreator = "creator"
	// EdgeClips holds the string denoting the clips edge name in mutations.
	EdgeClips = "clips"
	// EdgeGame holds the string denoting the game edge name in mutations.
	EdgeGame = "game"
	// Table holds the table name of the vod in the database.
	Table = "vods"
	// CreatorTable is the table that holds the creator relation/edge.
	CreatorTable = "vods"
	// CreatorInverseTable is the table name for the Creator entity.
	// It exists in this package in order to avoid circular dependency with the "creator" package.
	CreatorInverseTable = "creators"
	// CreatorColumn is the table column denoting the creator relation/edge.
	CreatorColumn = "creator_vods"
	// ClipsTable is the table that holds the clips relation/edge. The primary key declared below.
	ClipsTable = "vod_clips"
	// ClipsInverseTable is the table name for the Clip entity.
	// It exists in this package in order to avoid circular dependency with the "clip" package.
	ClipsInverseTable = "clips"
	// GameTable is the table that holds the game relation/edge.
	GameTable = "games"
	// GameInverseTable is the table name for the Game entity.
	// It exists in this package in order to avoid circular dependency with the "game" package.
	GameInverseTable = "games"
	// GameColumn is the table column denoting the game relation/edge.
	GameColumn = "vod_game"
)

// Columns holds all SQL columns for vod fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldDuration,
	FieldDate,
	FieldFilename,
	FieldResolution,
	FieldFps,
	FieldSize,
	FieldPublish,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "vods"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"creator_vods",
}

var (
	// ClipsPrimaryKey and ClipsColumn2 are the table columns denoting the
	// primary key for the clips relation (M2M).
	ClipsPrimaryKey = []string{"vod_id", "clip_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
