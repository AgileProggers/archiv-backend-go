// Code generated by entc, DO NOT EDIT.

package game

const (
	// Label holds the string label denoting the game type in the database.
	Label = "game"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldGameID holds the string denoting the game_id field in the database.
	FieldGameID = "game_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldBoxArt holds the string denoting the box_art field in the database.
	FieldBoxArt = "box_art"
	// EdgeClip holds the string denoting the clip edge name in mutations.
	EdgeClip = "clip"
	// EdgeVod holds the string denoting the vod edge name in mutations.
	EdgeVod = "vod"
	// Table holds the table name of the game in the database.
	Table = "games"
	// ClipTable is the table that holds the clip relation/edge.
	ClipTable = "games"
	// ClipInverseTable is the table name for the Clip entity.
	// It exists in this package in order to avoid circular dependency with the "clip" package.
	ClipInverseTable = "clips"
	// ClipColumn is the table column denoting the clip relation/edge.
	ClipColumn = "clip_game"
	// VodTable is the table that holds the vod relation/edge.
	VodTable = "games"
	// VodInverseTable is the table name for the Vod entity.
	// It exists in this package in order to avoid circular dependency with the "vod" package.
	VodInverseTable = "vods"
	// VodColumn is the table column denoting the vod relation/edge.
	VodColumn = "vod_game"
)

// Columns holds all SQL columns for game fields.
var Columns = []string{
	FieldID,
	FieldGameID,
	FieldName,
	FieldBoxArt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "games"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"clip_game",
	"vod_game",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// GameIDValidator is a validator for the "game_id" field. It is called by the builders before save.
	GameIDValidator func(int) error
)
