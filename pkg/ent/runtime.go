// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/AgileProggers/archiv-backend-go/pkg/ent/clip"
	"github.com/AgileProggers/archiv-backend-go/pkg/ent/creator"
	"github.com/AgileProggers/archiv-backend-go/pkg/ent/game"
	"github.com/AgileProggers/archiv-backend-go/pkg/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	clipFields := schema.Clip{}.Fields()
	_ = clipFields
	// clipDescTitle is the schema descriptor for title field.
	clipDescTitle := clipFields[0].Descriptor()
	// clip.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	clip.TitleValidator = clipDescTitle.Validators[0].(func(string) error)
	// clipDescDuration is the schema descriptor for duration field.
	clipDescDuration := clipFields[1].Descriptor()
	// clip.DurationValidator is a validator for the "duration" field. It is called by the builders before save.
	clip.DurationValidator = clipDescDuration.Validators[0].(func(int) error)
	// clipDescFilename is the schema descriptor for filename field.
	clipDescFilename := clipFields[3].Descriptor()
	// clip.FilenameValidator is a validator for the "filename" field. It is called by the builders before save.
	clip.FilenameValidator = clipDescFilename.Validators[0].(func(string) error)
	creatorFields := schema.Creator{}.Fields()
	_ = creatorFields
	// creatorDescName is the schema descriptor for name field.
	creatorDescName := creatorFields[0].Descriptor()
	// creator.NameValidator is a validator for the "name" field. It is called by the builders before save.
	creator.NameValidator = creatorDescName.Validators[0].(func(string) error)
	gameFields := schema.Game{}.Fields()
	_ = gameFields
	// gameDescGameID is the schema descriptor for game_id field.
	gameDescGameID := gameFields[0].Descriptor()
	// game.GameIDValidator is a validator for the "game_id" field. It is called by the builders before save.
	game.GameIDValidator = gameDescGameID.Validators[0].(func(int) error)
}
