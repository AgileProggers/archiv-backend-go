// Code generated by entc, DO NOT EDIT.

package emote

const (
	// Label holds the string label denoting the emote type in the database.
	Label = "emote"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// EdgeProvider holds the string denoting the provider edge name in mutations.
	EdgeProvider = "provider"
	// Table holds the table name of the emote in the database.
	Table = "emotes"
	// ProviderTable is the table that holds the provider relation/edge.
	ProviderTable = "emotes"
	// ProviderInverseTable is the table name for the Provider entity.
	// It exists in this package in order to avoid circular dependency with the "provider" package.
	ProviderInverseTable = "providers"
	// ProviderColumn is the table column denoting the provider relation/edge.
	ProviderColumn = "provider_emotes"
)

// Columns holds all SQL columns for emote fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldURL,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "emotes"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"provider_emotes",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
