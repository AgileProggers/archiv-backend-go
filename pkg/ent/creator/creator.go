// Code generated by entc, DO NOT EDIT.

package creator

const (
	// Label holds the string label denoting the creator type in the database.
	Label = "creator"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeClips holds the string denoting the clips edge name in mutations.
	EdgeClips = "clips"
	// EdgeVods holds the string denoting the vods edge name in mutations.
	EdgeVods = "vods"
	// Table holds the table name of the creator in the database.
	Table = "creators"
	// ClipsTable is the table that holds the clips relation/edge.
	ClipsTable = "clips"
	// ClipsInverseTable is the table name for the Clip entity.
	// It exists in this package in order to avoid circular dependency with the "clip" package.
	ClipsInverseTable = "clips"
	// ClipsColumn is the table column denoting the clips relation/edge.
	ClipsColumn = "creator_clips"
	// VodsTable is the table that holds the vods relation/edge.
	VodsTable = "vods"
	// VodsInverseTable is the table name for the Vod entity.
	// It exists in this package in order to avoid circular dependency with the "vod" package.
	VodsInverseTable = "vods"
	// VodsColumn is the table column denoting the vods relation/edge.
	VodsColumn = "creator_vods"
)

// Columns holds all SQL columns for creator fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)
