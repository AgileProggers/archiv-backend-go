// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/clips/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clips"
                ],
                "summary": "Get all clips",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Clip"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clips"
                ],
                "summary": "Create clip",
                "parameters": [
                    {
                        "description": "Clip dict",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/clips/{uuid}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clips"
                ],
                "summary": "Get clips by uuid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unique Identifier",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Clip"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/creators/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Creators"
                ],
                "summary": "Get all creators",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Creator"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Creators"
                ],
                "summary": "Create creator",
                "parameters": [
                    {
                        "description": "Creator dict",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/creators/{uuid}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Creators"
                ],
                "summary": "Get creator by uuid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unique Identifyer",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Creator"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/games/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Games"
                ],
                "summary": "Get all games",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Game"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Games"
                ],
                "summary": "Create game",
                "parameters": [
                    {
                        "description": "Game dict",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/games/{uuid}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Games"
                ],
                "summary": "Get game by uuid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unique Identifier",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Game"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vods/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vods"
                ],
                "summary": "Get all vods",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Vod"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vods"
                ],
                "summary": "Create vod",
                "parameters": [
                    {
                        "description": "Vod dict",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vods/{uuid}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vods"
                ],
                "summary": "Get vod by uuid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unique Identifier",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Vod"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Clip": {
            "type": "object",
            "required": [
                "date",
                "duration",
                "filename",
                "resolution",
                "size",
                "title",
                "view_count"
            ],
            "properties": {
                "creator": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "filename": {
                    "type": "string"
                },
                "game": {
                    "type": "integer"
                },
                "resolution": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "view_count": {
                    "type": "integer"
                },
                "vod": {
                    "type": "string"
                }
            }
        },
        "models.Creator": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "clips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Clip"
                    }
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "integer"
                }
            }
        },
        "models.Game": {
            "type": "object",
            "required": [
                "box_art",
                "name"
            ],
            "properties": {
                "box_art": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "integer"
                }
            }
        },
        "models.Vod": {
            "type": "object",
            "required": [
                "date",
                "duration",
                "filename",
                "fps",
                "publish",
                "resolution",
                "size",
                "title"
            ],
            "properties": {
                "clips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Clip"
                    }
                },
                "date": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "filename": {
                    "type": "string"
                },
                "fps": {
                    "type": "number"
                },
                "publish": {
                    "type": "boolean"
                },
                "resolution": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
